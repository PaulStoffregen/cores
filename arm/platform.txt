
# Teensy ARM Core and platform.
# -----------------------------

# For more info:
# https://github.com/arduino/Arduino/wiki/Arduino-IDE-1.5---3rd-party-Hardware-specification

name=Teensy ARM Boards
version=1.22

# ARM Cortex-M4 compile variables
# -------------------------------

compiler.path={runtime.ide.path}/hardware/tools/arm-none-eabi/bin/
compiler.c.cmd=arm-none-eabi-gcc
compiler.c.flags=-c -g -Os -Wall -mthumb -nostdlib -ffunction-sections -fdata-sections -MMD
compiler.c.elf.cmd=arm-none-eabi-gcc
compiler.c.elf.flags=-Os -Wl,--gc-sections -mthumb
compiler.ldlibs=-larm_cortexM4l_math -lm
compiler.S.flags=-c -g -x assembler-with-cpp -mthumb
compiler.cpp.cmd=arm-none-eabi-g++
compiler.cpp.flags=-c -g -Os -Wall -mthumb -nostdlib -fno-exceptions -ffunction-sections -fdata-sections -fno-rtti -felide-constructors -std=gnu++0x -MMD
compiler.ar.cmd=arm-none-eabi-ar
compiler.ar.flags=rcs
compiler.objcopy.cmd=arm-none-eabi-objcopy
compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0
compiler.objcopy.hex.flags=-O ihex -R .eeprom
compiler.size.cmd=arm-none-eabi-size

# this can be overriden in boards.txt
build.extra_flags= {build.option1} -DTEENSYDUINO=120 {build.define0} {build.define1}

# These can be overridden in platform.local.txt
compiler.c.extra_flags=
compiler.c.elf.extra_flags=
compiler.cpp.extra_flags=
compiler.S.extra_flags=
compiler.ar.extra_flags=
compiler.elf2hex.extra_flags=

# ARM Cortex-M4 compile patterns
# ------------------------------

## Compile c files
recipe.c.o.pattern="{compiler.path}{compiler.c.cmd}" {compiler.c.flags} -mcpu={build.mcu} -DF_CPU={build.f_cpu} -D{software}={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"

## Compile c++ files
recipe.cpp.o.pattern="{compiler.path}{compiler.cpp.cmd}" {compiler.cpp.flags} -mcpu={build.mcu} -DF_CPU={build.f_cpu} -D{software}={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"

## Compile S files
recipe.S.o.pattern="{compiler.path}{compiler.c.cmd}" {compiler.S.flags} -mcpu={build.mcu} -DF_CPU={build.f_cpu} -D{software}={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.S.extra_flags} {build.extra_flags} {includes} "{source_file}" -o "{object_file}"

## Create archives
recipe.ar.pattern="{compiler.path}{compiler.ar.cmd}" {compiler.ar.flags} {compiler.ar.extra_flags} "{build.path}/{archive_file}" "{object_file}"

## Combine gc-sections, archives, and objects
recipe.c.combine.pattern="{compiler.path}{compiler.c.elf.cmd}" {compiler.c.elf.flags} -mcpu={build.mcu} "-T{build.core.path}/{build.linkscript}" -o "{build.path}/{build.project_name}.elf" {object_files} "{build.path}/{archive_file}" "-L{build.path}" {compiler.ldlibs}

## Create eeprom
recipe.objcopy.eep.pattern="{compiler.path}{compiler.objcopy.cmd}" {compiler.objcopy.eep.flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.eep"

## Create hex
recipe.objcopy.hex.pattern="{compiler.path}{compiler.objcopy.cmd}" {compiler.objcopy.hex.flags} "{build.path}/{build.project_name}.elf" "{build.path}/{build.project_name}.hex"

## Compute size
recipe.size.pattern="{compiler.path}{compiler.size.cmd}" -A "{build.path}/{build.project_name}.elf"
recipe.size.regex=^(?:\.text|\.ARM.exidx|\.relocate)\s+([0-9]+).*
recipe.size.regex.data=^(?:\.relocate|\.bss)\s+([0-9]+).*

# Teensy Uploader tools
# ----------------------

tools.teensy.cmd=teensy
tools.teensy.cmd.windows=teensy.exe
tools.teensy.upload.params.verbose=
tools.teensy.upload.params.quiet=
tools.teensy.path={runtime.ide.path}/hardware/tools
tools.teensy.upload.pattern="{path}/{cmd}" "{build.path}/{build.project_name}.hex"
